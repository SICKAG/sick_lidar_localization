# Configuration of ros1 driver for sick localization.
sick_lidar_localization:

  # Driver configuration. See Operation-Instruction-v1.1.0.241R.pdf, page 51, "IP port number and protocol" for default tcp ports.
  driver:
    localization_controller_default_ip_address: "192.168.0.1"                  # Default IP address "192.168.0.1" of the localization controller (if not otherwise set by parameter "localization_controller_ip_address")
    result_telegrams_tcp_port: 2201                                            # TCP port number of the localization controller sending localization results. To transmit the localization results to the vehicle controller, the localization controller uses IP port number 2201 to send localization results in a single direction to the external vehicle controller.
    cola_telegrams_tcp_port:   2111                                            # For requests and to transmit settings to the localization controller: IP port number 2111 and 2112 to send telegrams and to request data, SOPAS CoLa-A or CoLa-B protocols
    cola_binary: 0                                                             # 0: send Cola-ASCII (default), 1: send Cola-Binary, 2: toggle between Cola-ASCII and Cola-Binary (test and development only!)
    tcp_connection_retry_delay: 1.0                                            # Delay in seconds to retry to connect to the localization controller, default 1 second
    result_telegrams_topic: "/sick_lidar_localization/driver/result_telegrams" # ros topic to publish result port telegram messages (type SickLocResultPortTelegramMsg)
    result_telegrams_frame_id: "sick_lidar_localization"                       # ros frame id of result port telegram messages (type SickLocResultPortTelegramMsg)
    diagnostic_topic: "/sick_lidar_localization/driver/diagnostic"             # ros topic to publish diagnostic messages (type SickLocDiagnosticMsg)
    diagnostic_frame_id: "sick_lidar_localization"                             # ros frame id of diagnostic messages (type SickLocDiagnosticMsg)
    monitoring_rate: 1.0                                                       # frequency to monitor driver messages, once per second by default
    monitoring_message_timeout: 1.0                                            # timeout for driver messages, shutdown tcp-sockets and reconnect after message timeout, 1 second by default
    point_cloud_topic: "/cloud"                                                # ros topic to publish PointCloud2 data
    point_cloud_frame_id: "pointcloud_sick_lidar_localization"                 # ros frame id of PointCloud2 messages
    tf_parent_frame_id: "tf_demo_map"                                          # parent frame of tf messages of of vehicles pose (typically frame of the loaded map)
    tf_child_frame_id: "tf_sick_lidar_localization"                            # child frame of tf messages of of vehicles pose
    # Odometry configuration
    odom_telegrams_udp_port:   3000                                            # Udp port to send odom packages to the localization controller
    odom_topic:             "/odom"                                            # ROS topic for odometry messages
    odom_telegrams_bigendian:   1                                              # Send udp odometry telegrams big endian (true) or little endian (false)
    odom_telegrams_source_id: 100                                              # SourceID of udp odometry telegrams, e.g. vehicle controller 1

  # Configuration for time sync service
  time_sync:
    cola_response_timeout:     10.0  # Timeout in seconds for cola responses from localization controller
    software_pll_fifo_length:   7    # Length of software pll fifo, default: 7
    time_sync_rate:             0.1  # Frequency to request timestamps from localization controller using ros service "SickLocRequestTimestamp" and to update software pll, default: 0.1
    time_sync_initial_rate:     1.0  # Frequency to request timestamps and to update software pll during initialization phase, default: 1.0 (LocRequestTimestamp queries every second)
    time_sync_initial_length:  10    # Length of initialization phase with LocRequestTimestamps every second, default: 10 (i.e. 10 LocRequestTimestamp queries every second after start, otherwise LocRequestTimestamp queries every 10 seconds)
